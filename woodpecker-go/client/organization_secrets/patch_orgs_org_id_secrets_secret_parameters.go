// Code generated by go-swagger; DO NOT EDIT.

package organization_secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"go.woodpecker-ci.org/woodpecker/v2/woodpecker-go/models"
)

// NewPatchOrgsOrgIDSecretsSecretParams creates a new PatchOrgsOrgIDSecretsSecretParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchOrgsOrgIDSecretsSecretParams() *PatchOrgsOrgIDSecretsSecretParams {
	return &PatchOrgsOrgIDSecretsSecretParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchOrgsOrgIDSecretsSecretParamsWithTimeout creates a new PatchOrgsOrgIDSecretsSecretParams object
// with the ability to set a timeout on a request.
func NewPatchOrgsOrgIDSecretsSecretParamsWithTimeout(timeout time.Duration) *PatchOrgsOrgIDSecretsSecretParams {
	return &PatchOrgsOrgIDSecretsSecretParams{
		timeout: timeout,
	}
}

// NewPatchOrgsOrgIDSecretsSecretParamsWithContext creates a new PatchOrgsOrgIDSecretsSecretParams object
// with the ability to set a context for a request.
func NewPatchOrgsOrgIDSecretsSecretParamsWithContext(ctx context.Context) *PatchOrgsOrgIDSecretsSecretParams {
	return &PatchOrgsOrgIDSecretsSecretParams{
		Context: ctx,
	}
}

// NewPatchOrgsOrgIDSecretsSecretParamsWithHTTPClient creates a new PatchOrgsOrgIDSecretsSecretParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchOrgsOrgIDSecretsSecretParamsWithHTTPClient(client *http.Client) *PatchOrgsOrgIDSecretsSecretParams {
	return &PatchOrgsOrgIDSecretsSecretParams{
		HTTPClient: client,
	}
}

/*
PatchOrgsOrgIDSecretsSecretParams contains all the parameters to send to the API endpoint

	for the patch orgs org ID secrets secret operation.

	Typically these are written to a http.Request.
*/
type PatchOrgsOrgIDSecretsSecretParams struct {

	/* Authorization.

	   Insert your personal access token

	   Default: "Bearer \u003cpersonal access token\u003e"
	*/
	Authorization string

	/* OrgID.

	   the org's id
	*/
	OrgID string

	/* Secret.

	   the secret's name
	*/
	Secret string

	/* SecretData.

	   the update secret data
	*/
	SecretData *models.Secret

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch orgs org ID secrets secret params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchOrgsOrgIDSecretsSecretParams) WithDefaults() *PatchOrgsOrgIDSecretsSecretParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch orgs org ID secrets secret params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchOrgsOrgIDSecretsSecretParams) SetDefaults() {
	var (
		authorizationDefault = string("Bearer <personal access token>")
	)

	val := PatchOrgsOrgIDSecretsSecretParams{
		Authorization: authorizationDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) WithTimeout(timeout time.Duration) *PatchOrgsOrgIDSecretsSecretParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) WithContext(ctx context.Context) *PatchOrgsOrgIDSecretsSecretParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) WithHTTPClient(client *http.Client) *PatchOrgsOrgIDSecretsSecretParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) WithAuthorization(authorization string) *PatchOrgsOrgIDSecretsSecretParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithOrgID adds the orgID to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) WithOrgID(orgID string) *PatchOrgsOrgIDSecretsSecretParams {
	o.SetOrgID(orgID)
	return o
}

// SetOrgID adds the orgId to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) SetOrgID(orgID string) {
	o.OrgID = orgID
}

// WithSecret adds the secret to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) WithSecret(secret string) *PatchOrgsOrgIDSecretsSecretParams {
	o.SetSecret(secret)
	return o
}

// SetSecret adds the secret to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) SetSecret(secret string) {
	o.Secret = secret
}

// WithSecretData adds the secretData to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) WithSecretData(secretData *models.Secret) *PatchOrgsOrgIDSecretsSecretParams {
	o.SetSecretData(secretData)
	return o
}

// SetSecretData adds the secretData to the patch orgs org ID secrets secret params
func (o *PatchOrgsOrgIDSecretsSecretParams) SetSecretData(secretData *models.Secret) {
	o.SecretData = secretData
}

// WriteToRequest writes these params to a swagger request
func (o *PatchOrgsOrgIDSecretsSecretParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param org_id
	if err := r.SetPathParam("org_id", o.OrgID); err != nil {
		return err
	}

	// path param secret
	if err := r.SetPathParam("secret", o.Secret); err != nil {
		return err
	}
	if o.SecretData != nil {
		if err := r.SetBodyParam(o.SecretData); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
