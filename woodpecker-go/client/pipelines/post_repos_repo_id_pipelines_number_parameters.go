// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostReposRepoIDPipelinesNumberParams creates a new PostReposRepoIDPipelinesNumberParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostReposRepoIDPipelinesNumberParams() *PostReposRepoIDPipelinesNumberParams {
	return &PostReposRepoIDPipelinesNumberParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostReposRepoIDPipelinesNumberParamsWithTimeout creates a new PostReposRepoIDPipelinesNumberParams object
// with the ability to set a timeout on a request.
func NewPostReposRepoIDPipelinesNumberParamsWithTimeout(timeout time.Duration) *PostReposRepoIDPipelinesNumberParams {
	return &PostReposRepoIDPipelinesNumberParams{
		timeout: timeout,
	}
}

// NewPostReposRepoIDPipelinesNumberParamsWithContext creates a new PostReposRepoIDPipelinesNumberParams object
// with the ability to set a context for a request.
func NewPostReposRepoIDPipelinesNumberParamsWithContext(ctx context.Context) *PostReposRepoIDPipelinesNumberParams {
	return &PostReposRepoIDPipelinesNumberParams{
		Context: ctx,
	}
}

// NewPostReposRepoIDPipelinesNumberParamsWithHTTPClient creates a new PostReposRepoIDPipelinesNumberParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostReposRepoIDPipelinesNumberParamsWithHTTPClient(client *http.Client) *PostReposRepoIDPipelinesNumberParams {
	return &PostReposRepoIDPipelinesNumberParams{
		HTTPClient: client,
	}
}

/*
PostReposRepoIDPipelinesNumberParams contains all the parameters to send to the API endpoint

	for the post repos repo ID pipelines number operation.

	Typically these are written to a http.Request.
*/
type PostReposRepoIDPipelinesNumberParams struct {

	/* Authorization.

	   Insert your personal access token

	   Default: "Bearer \u003cpersonal access token\u003e"
	*/
	Authorization string

	/* DeployTo.

	   override the target deploy value
	*/
	DeployTo *string

	/* Event.

	   override the event type
	*/
	Event *string

	/* Number.

	   the number of the pipeline
	*/
	Number int64

	/* RepoID.

	   the repository id
	*/
	RepoID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post repos repo ID pipelines number params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostReposRepoIDPipelinesNumberParams) WithDefaults() *PostReposRepoIDPipelinesNumberParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post repos repo ID pipelines number params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostReposRepoIDPipelinesNumberParams) SetDefaults() {
	var (
		authorizationDefault = string("Bearer <personal access token>")
	)

	val := PostReposRepoIDPipelinesNumberParams{
		Authorization: authorizationDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithTimeout(timeout time.Duration) *PostReposRepoIDPipelinesNumberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithContext(ctx context.Context) *PostReposRepoIDPipelinesNumberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithHTTPClient(client *http.Client) *PostReposRepoIDPipelinesNumberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithAuthorization(authorization string) *PostReposRepoIDPipelinesNumberParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithDeployTo adds the deployTo to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithDeployTo(deployTo *string) *PostReposRepoIDPipelinesNumberParams {
	o.SetDeployTo(deployTo)
	return o
}

// SetDeployTo adds the deployTo to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetDeployTo(deployTo *string) {
	o.DeployTo = deployTo
}

// WithEvent adds the event to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithEvent(event *string) *PostReposRepoIDPipelinesNumberParams {
	o.SetEvent(event)
	return o
}

// SetEvent adds the event to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetEvent(event *string) {
	o.Event = event
}

// WithNumber adds the number to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithNumber(number int64) *PostReposRepoIDPipelinesNumberParams {
	o.SetNumber(number)
	return o
}

// SetNumber adds the number to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetNumber(number int64) {
	o.Number = number
}

// WithRepoID adds the repoID to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) WithRepoID(repoID int64) *PostReposRepoIDPipelinesNumberParams {
	o.SetRepoID(repoID)
	return o
}

// SetRepoID adds the repoId to the post repos repo ID pipelines number params
func (o *PostReposRepoIDPipelinesNumberParams) SetRepoID(repoID int64) {
	o.RepoID = repoID
}

// WriteToRequest writes these params to a swagger request
func (o *PostReposRepoIDPipelinesNumberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.DeployTo != nil {

		// query param deploy_to
		var qrDeployTo string

		if o.DeployTo != nil {
			qrDeployTo = *o.DeployTo
		}
		qDeployTo := qrDeployTo
		if qDeployTo != "" {

			if err := r.SetQueryParam("deploy_to", qDeployTo); err != nil {
				return err
			}
		}
	}

	if o.Event != nil {

		// query param event
		var qrEvent string

		if o.Event != nil {
			qrEvent = *o.Event
		}
		qEvent := qrEvent
		if qEvent != "" {

			if err := r.SetQueryParam("event", qEvent); err != nil {
				return err
			}
		}
	}

	// path param number
	if err := r.SetPathParam("number", swag.FormatInt64(o.Number)); err != nil {
		return err
	}

	// path param repo_id
	if err := r.SetPathParam("repo_id", swag.FormatInt64(o.RepoID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
