variables:
  - &golang_image 'docker.io/golang:1.22'
  - &when
    - path: &when_path # related config files
        - '.woodpecker/test.yaml'
        - '.golangci.yaml'
        # go source code
        - '**/*.go'
        - 'go.*'
        # schema changes
        - 'pipeline/schema/**'
      event: pull_request
    - event: push
      branch: renovate/*
      path: *when_path

when:
  - event: pull_request
  - event: push
    branch: renovate/*
  - event: push
    branch: ${CI_REPO_DEFAULT_BRANCH}
    path: *when_path

steps:
  - name: vendor
    image: *golang_image
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
    commands:
      - mkdir -p .go
      - go mod vendor
    when:
      path:
        - <<: *when_path
        - '.woodpecker/**'

  - name: lint-pipeline
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
      WOODPECKER_DISABLE_UPDATE_CHECK: true
    commands:
      - go run go.woodpecker-ci.org/woodpecker/v2/cmd/cli lint
    when:
      - event: pull_request
        path:
          - '.woodpecker/**'

  - name: dummy-web
    image: *golang_image
    commands:
      - mkdir -p web/dist/
      - echo "test" > web/dist/index.html
    when:
      - path: *when_path

  - name: lint
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
    commands:
      - make lint
    when: *when

  - name: check-swagger
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
    commands:
      - 'make generate-swagger'
      - 'DIFF=$(git diff | head)'
      - '[ -n "$DIFF" ] && { echo "swagger not up to date, exec `make generate-swagger` and commit"; exit 1; } || true'
    when: *when

  - name: lint-license-header
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
    commands:
      - go install github.com/google/addlicense@latest # cspell:words addlicense
      - 'addlicense -check -ignore "vendor/**" **/*.go'
    when: *when

  - name: test
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
    commands:
      - make test-agent
      - make test-server
      - make test-cli
      - make test-lib
    when:
      - path: *when_path

  - name: sqlite
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
      WOODPECKER_DATABASE_DRIVER: sqlite3
    commands:
      - make test-server-datastore-coverage
    when:
      - path: *when_path

  - name: postgres
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
      WOODPECKER_DATABASE_DRIVER: postgres
      WOODPECKER_DATABASE_DATASOURCE: 'host=postgres user=postgres dbname=postgres sslmode=disable' # cspell:disable-line
    commands:
      - make test-server-datastore
    when: *when

  - name: mysql
    image: *golang_image
    depends_on:
      - vendor
    environment:
      GOPATH: ${CI_WORKSPACE}/.go
      WOODPECKER_DATABASE_DRIVER: mysql
      WOODPECKER_DATABASE_DATASOURCE: root@tcp(mysql:3306)/test?parseTime=true
    commands:
      - make test-server-datastore
    when: *when

  - name: codecov
    image: docker.io/woodpeckerci/plugin-codecov:2.1.2
    depends_on:
      - test
      - sqlite
    pull: true
    settings:
      files:
        - agent-coverage.out
        - cli-coverage.out
        - coverage.out
        - server-coverage.out
        - datastore-coverage.out
      token:
        from_secret: codecov_token
    when:
      - path: *when_path
    failure: ignore

services:
  - name: postgres
    image: docker.io/postgres:16
    ports: ['5432']
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    when: *when

  - name: mysql
    image: docker.io/mysql:8.2.0
    ports: ['3306']
    environment:
      MYSQL_DATABASE: test
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    when: *when
